{"ast":null,"code":"var _jsxFileName = \"/Users/vibhachandrasekar/Desktop/global_alignment/frontend/src/addSequence.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './addSequence.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddSequence = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // initialize sequences\n  const [sequence1, setSequence1] = useState();\n  const [sequence2, setSequence2] = useState();\n  const nameUpdate = event => {\n    // Dealing with name field changes to update our state\n    setName(event.target.value);\n  };\n  const handleSubmit = () => {\n    // Once the form has been submitted, this function will post to the backend\n    const postURL = \"http://localhost:4000/api/staff/\"; //Our previously set up route in the backend\n    fetch(postURL, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        // We should keep the fields consistent for managing this data later\n        name: name,\n        clockedIn: false,\n        dates: []\n      })\n    }).then(() => {\n      // Once posted, the user will be notified \n      alert('You have been checked in!');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"name\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter first sequence:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        onChange: nameUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter second sequence:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        onChange: nameUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Calculate alignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(AddSequence, \"2f5Jwa0KiDq6/hqKFjTSZR41qos=\", false, function () {\n  return [useNavigate];\n});\n_c = AddSequence;\nexport default AddSequence;\nvar _c;\n$RefreshReg$(_c, \"AddSequence\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AddSequence","_s","navigate","sequence1","setSequence1","sequence2","setSequence2","nameUpdate","event","setName","target","value","handleSubmit","postURL","fetch","method","headers","body","JSON","stringify","name","clockedIn","dates","then","alert","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","required","onChange","type","_c","$RefreshReg$"],"sources":["/Users/vibhachandrasekar/Desktop/global_alignment/frontend/src/addSequence.js"],"sourcesContent":["import React, { useState }  from 'react'\nimport './addSequence.css'\nimport { useNavigate } from 'react-router-dom';\n\n\n\nexport const AddSequence= ()=> {\n\n    const navigate = useNavigate();\n\n    // initialize sequences\n    const [sequence1, setSequence1] = useState()\n    const [sequence2, setSequence2] = useState()\n    \n    const nameUpdate=(event)=>{ // Dealing with name field changes to update our state\n        setName(event.target.value)\n    }\n\n    const handleSubmit=()=> { // Once the form has been submitted, this function will post to the backend\n        const postURL = \"http://localhost:4000/api/staff/\" //Our previously set up route in the backend\n        fetch(postURL, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ // We should keep the fields consistent for managing this data later\n                name: name,\n                clockedIn:false,\n                dates:[]\n            })\n        })\n        .then(()=>{\n            // Once posted, the user will be notified \n            alert('You have been checked in!');\n        })\n    }\n\n    return (\n        <div className='name'>\n            <form onSubmit={handleSubmit}>\n                <label>Enter first sequence:</label>\n                <input required onChange={nameUpdate}></input>\n                <label>Enter second sequence:</label>\n                <input required onChange={nameUpdate}></input>\n                <button type=\"submit\">Calculate alignment</button>\n            </form>\n        </div>\n    )\n    \n}\n\nexport default AddSequence\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAS,OAAO;AACxC,OAAO,mBAAmB;AAC1B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI/C,OAAO,MAAMC,WAAW,GAAEA,CAAA,KAAK;EAAAC,EAAA;EAE3B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAE5C,MAAMW,UAAU,GAAEC,KAAK,IAAG;IAAE;IACxBC,OAAO,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAACA,CAAA,KAAK;IAAE;IACtB,MAAMC,OAAO,GAAG,kCAAkC,EAAC;IACnDC,KAAK,CAACD,OAAO,EAAE;MACXE,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE;QACnBC,IAAI,EAAEA,IAAI;QACVC,SAAS,EAAC,KAAK;QACfC,KAAK,EAAC;MACV,CAAC;IACL,CAAC,CAAC,CACDC,IAAI,CAAC,MAAI;MACN;MACAC,KAAK,CAAC,2BAA2B,CAAC;IACtC,CAAC,CAAC;EACN,CAAC;EAED,oBACIzB,OAAA;IAAK0B,SAAS,EAAC,MAAM;IAAAC,QAAA,eACjB3B,OAAA;MAAM4B,QAAQ,EAAEf,YAAa;MAAAc,QAAA,gBACzB3B,OAAA;QAAA2B,QAAA,EAAO;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpChC,OAAA;QAAOiC,QAAQ;QAACC,QAAQ,EAAE1B;MAAW;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9ChC,OAAA;QAAA2B,QAAA,EAAO;MAAsB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrChC,OAAA;QAAOiC,QAAQ;QAACC,QAAQ,EAAE1B;MAAW;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9ChC,OAAA;QAAQmC,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGd,CAAC;AAAA9B,EAAA,CA5CYD,WAAW;EAAA,QAEHH,WAAW;AAAA;AAAAsC,EAAA,GAFnBnC,WAAW;AA8CxB,eAAeA,WAAW;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}