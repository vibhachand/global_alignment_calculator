{"ast":null,"code":"var _jsxFileName = \"/Users/vibhachandrasekar/Desktop/global_alignment/frontend/src/addSequence.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './addSequence.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddSequence = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // initialize sequences and error message\n  const [sequence1, setSequence1] = useState();\n  const [sequence2, setSequence2] = useState();\n  const [error1, setError] = useState();\n\n  // event handler functions for sequence submissions\n  const handleSequence1Change = event => setSequence1(event.target.value);\n  const handleSequence2Change = event => setSequence2(event.target.value);\n\n  // handle submission\n  const handleSubmit = event => {\n    fetch(postURL, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        // We should keep the fields consistent for managing this data later\n        name: name,\n        clockedIn: false,\n        dates: []\n      })\n    }).then(() => {\n      // Once posted, the user will be notified \n      alert('You have been checked in!');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"name\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter first sequence:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        onChange: nameUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter second sequence:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        onChange: nameUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Calculate alignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), error1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error_message\",\n      children: error1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(AddSequence, \"M2FHp+M2HrLqoxFqNyIlM7QGAzY=\", false, function () {\n  return [useNavigate];\n});\n_c = AddSequence;\nexport default AddSequence;\nvar _c;\n$RefreshReg$(_c, \"AddSequence\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AddSequence","_s","navigate","sequence1","setSequence1","sequence2","setSequence2","error1","setError","handleSequence1Change","event","target","value","handleSequence2Change","handleSubmit","fetch","postURL","method","headers","body","JSON","stringify","name","clockedIn","dates","then","alert","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","required","onChange","nameUpdate","type","_c","$RefreshReg$"],"sources":["/Users/vibhachandrasekar/Desktop/global_alignment/frontend/src/addSequence.js"],"sourcesContent":["import React, { useState }  from 'react'\nimport './addSequence.css'\nimport { useNavigate } from 'react-router-dom';\n\n\n\nexport const AddSequence= ()=> {\n\n    const navigate = useNavigate();\n\n    // initialize sequences and error message\n    const [sequence1, setSequence1] = useState()\n    const [sequence2, setSequence2] = useState()\n    const [error1, setError] = useState()\n\n    // event handler functions for sequence submissions\n    const handleSequence1Change = (event) => setSequence1(event.target.value);\n    const handleSequence2Change = (event) => setSequence2(event.target.value);\n\n\n    // handle submission\n    const handleSubmit=(event)=> { \n        fetch(postURL, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ // We should keep the fields consistent for managing this data later\n                name: name,\n                clockedIn:false,\n                dates:[]\n            })\n        })\n        .then(()=>{\n            // Once posted, the user will be notified \n            alert('You have been checked in!');\n        })\n    }\n\n    return (\n        <div className='name'>\n            <form onSubmit={handleSubmit}>\n                <label>Enter first sequence:</label>\n                <input required onChange={nameUpdate}></input>\n                <label>Enter second sequence:</label>\n                <input required onChange={nameUpdate}></input>\n                <button type=\"submit\">Calculate alignment</button>\n            </form>\n            {error1 && <div className='error_message'>{error1}</div>}\n        </div>\n    )\n    \n}\n\nexport default AddSequence\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAS,OAAO;AACxC,OAAO,mBAAmB;AAC1B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI/C,OAAO,MAAMC,WAAW,GAAEA,CAAA,KAAK;EAAAC,EAAA;EAE3B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAACW,MAAM,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC;;EAErC;EACA,MAAMa,qBAAqB,GAAIC,KAAK,IAAKN,YAAY,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACzE,MAAMC,qBAAqB,GAAIH,KAAK,IAAKJ,YAAY,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;;EAGzE;EACA,MAAME,YAAY,GAAEJ,KAAK,IAAI;IACzBK,KAAK,CAACC,OAAO,EAAE;MACXC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE;QACnBC,IAAI,EAAEA,IAAI;QACVC,SAAS,EAAC,KAAK;QACfC,KAAK,EAAC;MACV,CAAC;IACL,CAAC,CAAC,CACDC,IAAI,CAAC,MAAI;MACN;MACAC,KAAK,CAAC,2BAA2B,CAAC;IACtC,CAAC,CAAC;EACN,CAAC;EAED,oBACI3B,OAAA;IAAK4B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjB7B,OAAA;MAAM8B,QAAQ,EAAEf,YAAa;MAAAc,QAAA,gBACzB7B,OAAA;QAAA6B,QAAA,EAAO;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpClC,OAAA;QAAOmC,QAAQ;QAACC,QAAQ,EAAEC;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9ClC,OAAA;QAAA6B,QAAA,EAAO;MAAsB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrClC,OAAA;QAAOmC,QAAQ;QAACC,QAAQ,EAAEC;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9ClC,OAAA;QAAQsC,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,EACN1B,MAAM,iBAAIR,OAAA;MAAK4B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAErB;IAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAGd,CAAC;AAAAhC,EAAA,CA/CYD,WAAW;EAAA,QAEHH,WAAW;AAAA;AAAAyC,EAAA,GAFnBtC,WAAW;AAiDxB,eAAeA,WAAW;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}